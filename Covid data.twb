<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.1peco9c08zh0z8130odzy0ndbt38' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.0n1uwfz0ngrdx51cqlaxy1vqjbf3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sekac/OneDrive - University of West London/Desktop/Portfolio project/Tableau/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0n1uwfz0ngrdx51cqlaxy1vqjbf3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0n1uwfz0ngrdx51cqlaxy1vqjbf3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7A924C6AB393419FA18666B7A645683F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7A924C6AB393419FA18666B7A645683F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7A924C6AB393419FA18666B7A645683F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7A924C6AB393419FA18666B7A645683F]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7A924C6AB393419FA18666B7A645683F'>
            <properties context=''>
              <relation connection='excel-direct.0n1uwfz0ngrdx51cqlaxy1vqjbf3' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.1p9p3gu0wlsvga11hncud09ppvbu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.0hize1z1bx3dqw1b4nbsv0duzqpm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sekac/OneDrive - University of West London/Desktop/Portfolio project/Tableau/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0hize1z1bx3dqw1b4nbsv0duzqpm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0hize1z1bx3dqw1b4nbsv0duzqpm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AE0F08785F1B47B6BDEFC6F0AC5998CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AE0F08785F1B47B6BDEFC6F0AC5998CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_AE0F08785F1B47B6BDEFC6F0AC5998CD]' role='measure' type='quantitative' />
      <column caption='Continent ' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_AE0F08785F1B47B6BDEFC6F0AC5998CD'>
            <properties context=''>
              <relation connection='excel-direct.0hize1z1bx3dqw1b4nbsv0duzqpm' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.1pete540z3e1ds1821jqy1tln6hw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.065qrx606n1cjn15ta7dh01kfi14'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sekac/OneDrive - University of West London/Desktop/Portfolio project/Tableau/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.065qrx606n1cjn15ta7dh01kfi14' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.065qrx606n1cjn15ta7dh01kfi14' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6DF3367F0BB14A69939C0FE4AC6AAF34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6DF3367F0BB14A69939C0FE4AC6AAF34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6DF3367F0BB14A69939C0FE4AC6AAF34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6DF3367F0BB14A69939C0FE4AC6AAF34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_6DF3367F0BB14A69939C0FE4AC6AAF34]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_6DF3367F0BB14A69939C0FE4AC6AAF34'>
            <properties context=''>
              <relation connection='excel-direct.065qrx606n1cjn15ta7dh01kfi14' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.1t7xizf0ywd5nx18czpa11jdwp31' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.1bwdmom1n25ytb1fqcmqh1litsmi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sekac/OneDrive - University of West London/Desktop/Portfolio project/Tableau/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1bwdmom1n25ytb1fqcmqh1litsmi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1bwdmom1n25ytb1fqcmqh1litsmi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A478DB276CBC4222AE7A375D7C867A2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A478DB276CBC4222AE7A375D7C867A2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A478DB276CBC4222AE7A375D7C867A2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A478DB276CBC4222AE7A375D7C867A2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A478DB276CBC4222AE7A375D7C867A2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A478DB276CBC4222AE7A375D7C867A2A]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A478DB276CBC4222AE7A375D7C867A2A'>
            <properties context=''>
              <relation connection='excel-direct.1bwdmom1n25ytb1fqcmqh1litsmi' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_0FE95592759640108B1C15B5ED045EBE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location,Forecast Indicator' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.1peco9c08zh0z8130odzy0ndbt38' />
          </datasources>
          <datasource-dependencies datasource='federated.1peco9c08zh0z8130odzy0ndbt38'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1peco9c08zh0z8130odzy0ndbt38].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1peco9c08zh0z8130odzy0ndbt38].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1peco9c08zh0z8130odzy0ndbt38].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1peco9c08zh0z8130odzy0ndbt38].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1peco9c08zh0z8130odzy0ndbt38].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1peco9c08zh0z8130odzy0ndbt38].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1peco9c08zh0z8130odzy0ndbt38].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1peco9c08zh0z8130odzy0ndbt38].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1peco9c08zh0z8130odzy0ndbt38].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1peco9c08zh0z8130odzy0ndbt38].[:Measure Names]' value='167' />
            <format attr='height' value='43' />
            <format attr='color' value='#000000' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='text-format' field='[federated.1peco9c08zh0z8130odzy0ndbt38].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-align' value='right' />
            <format attr='text-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#add3f0' />
            <format attr='background-color' field='[federated.1peco9c08zh0z8130odzy0ndbt38].[:Measure Names]' value='#c0c0c0' />
            <format attr='background-color' field='[federated.1peco9c08zh0z8130odzy0ndbt38].[Multiple Values]' value='#f0f1e8' />
            <format attr='text-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1peco9c08zh0z8130odzy0ndbt38].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7691160440444946' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1peco9c08zh0z8130odzy0ndbt38].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{4B7B2105-6B70-4488-AEBA-3D32E3FADE5C}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.1p9p3gu0wlsvga11hncud09ppvbu' />
          </datasources>
          <datasource-dependencies datasource='federated.1p9p3gu0wlsvga11hncud09ppvbu'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent ' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1p9p3gu0wlsvga11hncud09ppvbu].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1p9p3gu0wlsvga11hncud09ppvbu].[none:location:nk]' value='150' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1p9p3gu0wlsvga11hncud09ppvbu].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p9p3gu0wlsvga11hncud09ppvbu].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1p9p3gu0wlsvga11hncud09ppvbu].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{F3BFEE35-A5C3-4375-BC08-3657E2518EE9}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.1pete540z3e1ds1821jqy1tln6hw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pete540z3e1ds1821jqy1tln6hw'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pete540z3e1ds1821jqy1tln6hw].[Longitude (generated)]' field-type='quantitative' max='9504224.5279934891' min='-15342533.880903773' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pete540z3e1ds1821jqy1tln6hw].[Latitude (generated)]' field-type='quantitative' max='10068174.24618501' min='-2117599.1346510085' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pete540z3e1ds1821jqy1tln6hw].[sum:PercentPopulationInfected:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1pete540z3e1ds1821jqy1tln6hw].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1pete540z3e1ds1821jqy1tln6hw].[none:Location:nk]' />
              <color column='[federated.1pete540z3e1ds1821jqy1tln6hw].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1pete540z3e1ds1821jqy1tln6hw].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.51574587821960449' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pete540z3e1ds1821jqy1tln6hw].[Latitude (generated)]</rows>
        <cols>[federated.1pete540z3e1ds1821jqy1tln6hw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E60C3F2C-543E-4F2B-B20F-6C6E0CAEE0F5}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.1t7xizf0ywd5nx18czpa11jdwp31' />
          </datasources>
          <datasource-dependencies datasource='federated.1t7xizf0ywd5nx18czpa11jdwp31'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1t7xizf0ywd5nx18czpa11jdwp31].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Location:nk]&#10;[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Forecast Indicator:nk]' value='Location'>
              <formatted-text>
                <run>Location</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Location:nk]' />
              <text column='[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Location:nk]' />
              <color column='[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Forecast Indicator:nk]' />
              <text column='[federated.1t7xizf0ywd5nx18czpa11jdwp31].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t7xizf0ywd5nx18czpa11jdwp31].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1t7xizf0ywd5nx18czpa11jdwp31].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{FB747A1E-41DF-4D43-9BD2-097242FD60D8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='8' param='horz' type-v2='layout-flow' w='99016' x='492' y='940'>
            <zone h='98120' id='6' type-v2='layout-basic' w='89606' x='492' y='940'>
              <zone h='18096' id='3' name='Sheet 1' w='35424' x='492' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38426' id='5' name='Sheet 2' w='35424' x='492' y='19036'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='56522' id='10' name='Sheet 3' w='54182' x='35916' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41598' id='12' name='Sheet 4' w='89606' x='492' y='57462'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='153' h='98120' id='18' is-fixed='true' type-v2='layout-basic' w='9410' x='90098' y='940'>
              <zone h='56522' id='7' param='vert' type-v2='layout-flow' w='9410' x='90098' y='940'>
                <zone fixed-size='90' h='11516' id='11' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.1pete540z3e1ds1821jqy1tln6hw].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9410' x='90098' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='41598' id='19' param='vert' type-v2='layout-flow' w='9410' x='90098' y='57462'>
                <zone h='28202' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Location:nk]&#10;[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Forecast Indicator:nk]' type-v2='color' w='9410' x='90098' y='57462'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='20' param='vert' type-v2='layout-flow' w='99016' x='492' y='940'>
                <zone fixed-size='136' h='18096' id='3' is-fixed='true' name='Sheet 1' w='35424' x='492' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56522' id='10' is-fixed='true' name='Sheet 3' w='54182' x='35916' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='90' h='11516' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1pete540z3e1ds1821jqy1tln6hw].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9410' x='90098' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38426' id='5' is-fixed='true' name='Sheet 2' w='35424' x='492' y='19036'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41598' id='12' is-fixed='true' name='Sheet 4' w='89606' x='492' y='57462'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28202' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Location:nk]&#10;[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Forecast Indicator:nk]' type-v2='color' w='9410' x='90098' y='57462'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CB10CB01-0C1D-4A1A-90BD-FCAD00902752}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1peco9c08zh0z8130odzy0ndbt38].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EABB094-7F69-4259-9B95-EF0FBA7F692A}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p9p3gu0wlsvga11hncud09ppvbu].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p9p3gu0wlsvga11hncud09ppvbu].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3D21519-C45F-43E2-91ED-71AA99D5DA0D}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pete540z3e1ds1821jqy1tln6hw].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pete540z3e1ds1821jqy1tln6hw].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4F8E3157-D137-4006-B707-B7CF4805D020}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Location:nk]&#10;[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Forecast Indicator:nk]</field>
            <field>[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Location:nk]</field>
            <field>[federated.1t7xizf0ywd5nx18czpa11jdwp31].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC10D39C-4967-4697-AB89-7E5484C71FB1}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1p9p3gu0wlsvga11hncud09ppvbu].[none:location:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1p9p3gu0wlsvga11hncud09ppvbu].[sum:TotalDeathCount:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1p9p3gu0wlsvga11hncud09ppvbu].[none:location:nk]</field>
                    <field>[federated.1p9p3gu0wlsvga11hncud09ppvbu].[sum:TotalDeathCount:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;North America&quot;</value>
                  <value>847942</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.1p9p3gu0wlsvga11hncud09ppvbu].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Location:nk]&#10;[federated.1t7xizf0ywd5nx18czpa11jdwp31].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{159ECE53-521C-425D-838A-505659962552}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='67' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      +/9pWq7A2g78fgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
